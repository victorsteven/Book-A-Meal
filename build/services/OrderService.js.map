{"version":3,"sources":["../../api/services/OrderService.js"],"names":["OrderService","fetchAllOrders","validOrders","dummyData","orders","map","order","newOrder","Order","id","name","mealId","menuId","selectOrder","orderLength","length","lastId","newId","push","modifyOrder","modifiedOrder","theOrder","find","oneOrder","Number"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,cADmB,4BACF;AACf,QAAMC,WAAW,GAAGC,qBAAUC,MAAV,CAAiBC,GAAjB,CAAqB,UAACC,KAAD,EAAW;AAClD,UAAMC,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,EAAT,GAAcH,KAAK,CAACG,EAApB;AACAF,MAAAA,QAAQ,CAACG,IAAT,GAAgBJ,KAAK,CAACI,IAAtB;AACAH,MAAAA,QAAQ,CAACI,MAAT,GAAkBL,KAAK,CAACK,MAAxB;AACAJ,MAAAA,QAAQ,CAACK,MAAT,GAAkBN,KAAK,CAACM,MAAxB;AAEA,aAAOL,QAAP;AACD,KARmB,CAApB;;AASA,WAAOL,WAAP;AACD,GAZkB;AAcnBW,EAAAA,WAdmB,uBAcPP,KAdO,EAcA;AACjB,QAAMQ,WAAW,GAAGX,qBAAUC,MAAV,CAAiBW,MAArC;AACA,QAAMC,MAAM,GAAGb,qBAAUC,MAAV,CAAiBU,WAAW,GAAG,CAA/B,EAAkCL,EAAjD;AACA,QAAMQ,KAAK,GAAGD,MAAM,GAAG,CAAvB;AACAV,IAAAA,KAAK,CAACG,EAAN,GAAWQ,KAAX;AACAX,IAAAA,KAAK,CAACM,MAAN,GAAe,CAAf;;AACAT,yBAAUC,MAAV,CAAiBc,IAAjB,CAAsBZ,KAAtB;;AACA,WAAOA,KAAP;AACD,GAtBkB;AAwBnBa,EAAAA,WAxBmB,uBAwBPV,EAxBO,EAwBHW,aAxBG,EAwBY;AAC7B,QAAMC,QAAQ,GAAGlB,qBAAUC,MAAV,CAAiBkB,IAAjB,CAAsB,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACd,EAAT,KAAgBe,MAAM,CAACf,EAAD,CAA1B;AAAA,KAA9B,CAAjB;;AACA,QAAIY,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACX,IAAT,GAAgBU,aAAa,CAACV,IAA9B;AACAW,MAAAA,QAAQ,CAACV,MAAT,GAAkBS,aAAa,CAACT,MAAhC;AACD;;AACD,WAAOU,QAAP;AACD;AA/BkB,CAArB;eAkCerB,Y","sourcesContent":["import dummyData from '../utils/dummyOrders';\nimport Order from '../models/Order';\n\nconst OrderService = {\n  fetchAllOrders() {\n    const validOrders = dummyData.orders.map((order) => {\n      const newOrder = new Order();\n      newOrder.id = order.id;\n      newOrder.name = order.name;\n      newOrder.mealId = order.mealId;\n      newOrder.menuId = order.menuId;\n\n      return newOrder;\n    });\n    return validOrders;\n  },\n\n  selectOrder(order) {\n    const orderLength = dummyData.orders.length;\n    const lastId = dummyData.orders[orderLength - 1].id;\n    const newId = lastId + 1;\n    order.id = newId;\n    order.menuId = 1;\n    dummyData.orders.push(order);\n    return order;\n  },\n\n  modifyOrder(id, modifiedOrder) {\n    const theOrder = dummyData.orders.find(oneOrder => oneOrder.id === Number(id));\n    if (theOrder) {\n      theOrder.name = modifiedOrder.name;\n      theOrder.mealId = modifiedOrder.mealId;\n    }\n    return theOrder;\n  },\n};\n\nexport default OrderService;\n"],"file":"OrderService.js"}