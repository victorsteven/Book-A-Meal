{"version":3,"sources":["../../api/services/MealService.js"],"names":["MealService","fetchAllMeals","validMeals","dummyData","meals","map","meal","newMeal","Meal","id","name","size","price","menuId","addMeal","mealLength","length","lastId","newId","push","updateMeal","updatedMeal","theMeal","find","oneMeal","Number","getAMeal","deleteMeal","mealToDelete","filter","deletedMeal"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,cAAc;AAClBC,eADkB,2BACF;AACd,QAAMC,aAAaC,qBAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAU;AAC/C,UAAMC,UAAU,IAAIC,cAAJ,EAAhB;AACAD,cAAQE,EAAR,GAAaH,KAAKG,EAAlB;AACAF,cAAQG,IAAR,GAAeJ,KAAKI,IAApB;AACAH,cAAQI,IAAR,GAAeL,KAAKK,IAApB;AACAJ,cAAQK,KAAR,GAAgBN,KAAKM,KAArB;AACAL,cAAQM,MAAR,GAAiBP,KAAKO,MAAtB;;AAEA,aAAON,OAAP;AACD,KATkB,CAAnB;AAUA,WAAOL,UAAP;AACD,GAbiB;AAelBY,SAfkB,mBAeVR,IAfU,EAeJ;AACZ,QAAMS,aAAaZ,qBAAUC,KAAV,CAAgBY,MAAnC;AACA,QAAMC,SAASd,qBAAUC,KAAV,CAAgBW,aAAa,CAA7B,EAAgCN,EAA/C;AACA,QAAMS,QAAQD,SAAS,CAAvB;AACAX,SAAKG,EAAL,GAAUS,KAAV;AACAZ,SAAKO,MAAL,GAAc,CAAd;AACAV,yBAAUC,KAAV,CAAgBe,IAAhB,CAAqBb,IAArB;AACA,WAAOA,IAAP;AACD,GAvBiB;AAyBlBc,YAzBkB,sBAyBPX,EAzBO,EAyBHY,WAzBG,EAyBU;AAC1B,QAAMC,UAAUnB,qBAAUC,KAAV,CAAgBmB,IAAhB,CAAqB;AAAA,aAAWC,QAAQf,EAAR,KAAegB,OAAOhB,EAAP,CAA1B;AAAA,KAArB,CAAhB;AACA,QAAIa,OAAJ,EAAa;AACXA,cAAQZ,IAAR,GAAeW,YAAYX,IAA3B;AACAY,cAAQV,KAAR,GAAgBS,YAAYT,KAA5B;AACAU,cAAQX,IAAR,GAAeU,YAAYV,IAA3B;AACD;AACD,WAAOW,OAAP;AACD,GAjCiB;AAmClBI,UAnCkB,oBAmCTjB,EAnCS,EAmCL;AACX,QAAMH,OAAOH,qBAAUC,KAAV,CAAgBmB,IAAhB,CAAqB;AAAA,aAAWC,QAAQf,EAAR,KAAegB,OAAOhB,EAAP,CAA1B;AAAA,KAArB,CAAb;AACA,WAAOH,QAAQ,EAAf;AACD,GAtCiB;;;AAwClB;AACAqB,YAzCkB,sBAyCPlB,EAzCO,EAyCH;AACb,QAAMmB,eAAezB,qBAAUC,KAAV,CAAgBmB,IAAhB,CAAqB;AAAA,aAAWC,QAAQf,EAAR,KAAegB,OAAOhB,EAAP,CAA1B;AAAA,KAArB,CAArB;AACA,QAAImB,YAAJ,EAAkB;AAChBzB,2BAAUC,KAAV,GAAkBD,qBAAUC,KAAV,CAAgByB,MAAhB,CAAuB;AAAA,eAAeC,YAAYrB,EAAZ,KAAmBmB,aAAanB,EAA/C;AAAA,OAAvB,CAAlB;AACD;AACF;AA9CiB,CAApB;;kBAiDeT,W","file":"MealService.js","sourcesContent":["import dummyData from '../utils/dummyMeals';\nimport Meal from '../models/Meal';\n\nconst MealService = {\n  fetchAllMeals() {\n    const validMeals = dummyData.meals.map((meal) => {\n      const newMeal = new Meal();\n      newMeal.id = meal.id;\n      newMeal.name = meal.name;\n      newMeal.size = meal.size;\n      newMeal.price = meal.price;\n      newMeal.menuId = meal.menuId;\n\n      return newMeal;\n    });\n    return validMeals;\n  },\n\n  addMeal(meal) {\n    const mealLength = dummyData.meals.length;\n    const lastId = dummyData.meals[mealLength - 1].id;\n    const newId = lastId + 1;\n    meal.id = newId;\n    meal.menuId = 1;\n    dummyData.meals.push(meal);\n    return meal;\n  },\n\n  updateMeal(id, updatedMeal) {\n    const theMeal = dummyData.meals.find(oneMeal => oneMeal.id === Number(id));\n    if (theMeal) {\n      theMeal.name = updatedMeal.name;\n      theMeal.price = updatedMeal.price;\n      theMeal.size = updatedMeal.size;\n    }\n    return theMeal;\n  },\n\n  getAMeal(id) {\n    const meal = dummyData.meals.find(oneMeal => oneMeal.id === Number(id));\n    return meal || {};\n  },\n\n  // delete a meal\n  deleteMeal(id) {\n    const mealToDelete = dummyData.meals.find(oneMeal => oneMeal.id === Number(id));\n    if (mealToDelete) {\n      dummyData.meals = dummyData.meals.filter(deletedMeal => deletedMeal.id !== mealToDelete.id);\n    }\n  },\n};\n\nexport default MealService;\n"]}