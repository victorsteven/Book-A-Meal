{"version":3,"sources":["../../api/models/index.js"],"names":["basename","__filename","env","process","NODE_ENV","config","configJson","db","sequelize","Sequelize","use_env_variable","database","username","password","__dirname","filter","file","indexOf","slice","forEach","model","import","name","Object","keys","modelName","associate"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,oBAAUC,UAAV,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASC,iBAAWJ,GAAX,CAAf;AACA,IAAMK,KAAK,EAAX;AACA,IAAIC,kBAAJ;;AAEA,IAAIN,QAAQ,YAAZ,EAA0B;AACxBM,cAAY,IAAIC,mBAAJ,CAAcN,QAAQD,GAAR,CAAYG,OAAOK,gBAAnB,CAAd,EAAoDL,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,cAAY,IAAIC,mBAAJ,CAAcJ,OAAOM,QAArB,EAA+BN,OAAOO,QAAtC,EAAgDP,OAAOQ,QAAvD,EAAiER,MAAjE,CAAZ;AACD;;AAED,qBAAYS,SAAZ,EACGC,MADH,CACU;AAAA,SAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAtB,IAA2BD,SAAShB,QAApC,IAAgDgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA3E;AAAA,CADV,EAEGC,OAFH,CAEW,UAACH,IAAD,EAAU;AACjB,MAAMI,QAAQZ,UAAUa,MAAV,CAAiB,gBAAKP,SAAL,EAAgBE,IAAhB,CAAjB,CAAd;AACAT,KAAGa,MAAME,IAAT,IAAiBF,KAAjB;AACD,CALH;;AAOAG,OAAOC,IAAP,CAAYjB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACM,SAAD,EAAe;AACrC,MAAIlB,GAAGkB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BnB,OAAGkB,SAAH,EAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGE,SAAH,GAAeA,mBAAf;kBACeF,E","file":"index.js","sourcesContent":["import { readdirSync } from 'fs';\nimport { basename as _basename, join } from 'path';\nimport Sequelize from 'sequelize';\nimport configJson from '../config/config';\n\nconst basename = _basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = configJson[env];\nconst db = {};\nlet sequelize;\n\nif (env === 'production') {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nreaddirSync(__dirname)\n  .filter(file => file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js')\n  .forEach((file) => {\n    const model = sequelize.import(join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nexport default db;"]}