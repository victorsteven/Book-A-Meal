{"version":3,"sources":["../../api/controllers/mealController.js"],"names":["MealController","fetchAllMeals","req","res","allMeals","MealService","json","status","data","addAMeal","newMeal","body","createdMeal","addMeal","updateAMeal","updateMeal","id","params","Number","message","updatedMeal","getSingleMeal","foundMeal","getAMeal","deleteMeal","deletedMeal"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,aADqB,yBACPC,GADO,EACFC,GADE,EACG;AACtB,QAAMC,QAAQ,GAAGC,qBAAYJ,aAAZ,EAAjB;;AACA,WAAOE,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEJ;AAFQ,KAAT,EAGJG,MAHI,CAGG,GAHH,CAAP;AAID,GAPoB;AAQrBE,EAAAA,QARqB,oBAQZP,GARY,EAQPC,GARO,EAQF;AACjB,QAAMO,OAAO,GAAGR,GAAG,CAACS,IAApB;;AACA,QAAMC,WAAW,GAAGP,qBAAYQ,OAAZ,CAAoBH,OAApB,CAApB;;AACA,WAAOP,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEI;AAFQ,KAAT,EAGJL,MAHI,CAGG,GAHH,CAAP;AAID,GAfoB;AAiBrBO,EAAAA,WAjBqB,uBAiBTZ,GAjBS,EAiBJC,GAjBI,EAiBC;AACpB,QAAMY,UAAU,GAAGb,GAAG,CAACS,IAAvB;AADoB,QAEZK,EAFY,GAELd,GAAG,CAACe,MAFC,CAEZD,EAFY;;AAGpB,QAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACf,aAAOb,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BY,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AACD,QAAMC,WAAW,GAAGf,qBAAYU,UAAZ,CAAuBC,EAAvB,EAA2BD,UAA3B,CAApB;;AACA,WAAOZ,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEY;AAFQ,KAAT,EAGJb,MAHI,CAGG,GAHH,CAAP;AAID,GA/BoB;AAiCrBc,EAAAA,aAjCqB,yBAiCPnB,GAjCO,EAiCFC,GAjCE,EAiCG;AAAA,QACda,EADc,GACPd,GAAG,CAACe,MADG,CACdD,EADc;;AAEtB,QAAMM,SAAS,GAAGjB,qBAAYkB,QAAZ,CAAqBP,EAArB,CAAlB;;AACA,WAAOb,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEc;AAFQ,KAAT,EAGJf,MAHI,CAGG,GAHH,CAAP;AAID,GAxCoB;AA0CrBiB,EAAAA,UA1CqB,sBA0CVtB,GA1CU,EA0CLC,GA1CK,EA0CA;AAAA,QACXa,EADW,GACJd,GAAG,CAACe,MADA,CACXD,EADW;;AAEnB,QAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACf,aAAOb,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BY,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AACD,QAAMM,WAAW,GAAGpB,qBAAYmB,UAAZ,CAAuBR,EAAvB,CAApB;;AACA,WAAOb,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEiB;AAFQ,KAAT,EAGJlB,MAHI,CAGG,GAHH,CAAP;AAID;AAvDoB,CAAvB;eA0DeP,c","sourcesContent":["import MealService from '../services/MealService';\n\nconst MealController = {\n  fetchAllMeals(req, res) {\n    const allMeals = MealService.fetchAllMeals();\n    return res.json({\n      status: 'success',\n      data: allMeals,\n    }).status(200);\n  },\n  addAMeal(req, res) {\n    const newMeal = req.body;\n    const createdMeal = MealService.addMeal(newMeal);\n    return res.json({\n      status: 'success',\n      data: createdMeal,\n    }).status(201);\n  },\n\n  updateAMeal(req, res) {\n    const updateMeal = req.body;\n    const { id } = req.params;\n    if (!Number(id)) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number',\n      });\n    }\n    const updatedMeal = MealService.updateMeal(id, updateMeal);\n    return res.json({\n      status: 'success',\n      data: updatedMeal,\n    }).status(201);\n  },\n\n  getSingleMeal(req, res) {\n    const { id } = req.params;\n    const foundMeal = MealService.getAMeal(id);\n    return res.json({\n      status: 'success',\n      data: foundMeal,\n    }).status(200);\n  },\n\n  deleteMeal(req, res) {\n    const { id } = req.params;\n    if (!Number(id)) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number',\n      });\n    }\n    const deletedMeal = MealService.deleteMeal(id);\n    return res.json({\n      status: 'success',\n      data: deletedMeal,\n    }).status(201);\n  },\n};\n\nexport default MealController;\n"],"file":"mealController.js"}