{"version":3,"sources":["../../api/controllers/menus.js"],"names":["Menu","require","Meal","module","exports","create","req","res","name","body","then","status","send","menu","catch","error","list","findAll","include","model","as","menus","retrieve","findById","params","menuId","message","update","destroy"],"mappings":"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","file":"menus.js","sourcesContent":["const Menu = require('../models').Menu;\n// import {Todo} from '../models/todo';\n\nconst Meal = require('../models').Meal;\n\n\nmodule.exports = {\n  create(req, res) {\n    return Menu\n      .create({\n        name: req.body.name,\n      })\n      .then(menu => res.status(201).send(menu))\n      .catch(error => res.status(400).send(error));\n  },\n\n  list(req, res) {\n    return Menu\n      .findAll({\n        include: [{\n          model: Meal,\n          as: 'meals',\n        }],\n      })\n      .then(menus => res.status(200).send(menus))\n      .catch(error => res.status(400).send(error));\n  },\n\n  retrieve(req, res) {\n    return Menu\n      .findById(req.params.menuId, {\n        include: [{\n          model: Meal,\n          as: 'meals'\n        }]\n      })\n      .then((menu) => {\n        if (!menu) {\n          return res.status(404).send({\n            message: 'menu not found'\n          });\n        }\n        return res.status(200).send(menu);\n      })\n      .catch(error => res.status(400).send(error));\n  },\n\n  update(req, res) {\n    return Menu\n      .findById(req.params.menuId, {\n        include: [{\n          model: Meal,\n          as: 'meals'\n        }],\n      })\n      .then((menu) => {\n        if (!menu) {\n          return res.status(404).send({\n            message: 'menu not found'\n          });\n        }\n        return menu\n          .update({\n            name: req.body.name || menu.name,\n          })\n          .then(() => res.status(200).send(menu))\n          .catch(error => res.status(400).send(error));\n      })\n      .catch(error => res.status(400).send(error));\n  },\n\n  destroy(req, res) {\n    return Menu\n      .findById(req.params.menuId)\n      .then((menu) => {\n        if (!menu) {\n          return res.status(400).send({\n            message: 'menu not found'\n          });\n        }\n        return menu\n          .destroy()\n          .then(() => res.status(201).send({\n            message: 'menu deleted'\n          }))\n          .catch(error => res.status(400).send(error));\n      })\n      .catch(error => res.status(400).send(error));\n  },\n};\n"]}