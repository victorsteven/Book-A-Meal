{"version":3,"sources":["../../api/controllers/ordersController.js"],"names":["OrderController","fetchAllOrders","req","res","allOrders","OrderService","json","status","data","selectOrder","newOrder","body","createdOrder","modifyOrder","id","params","Number","message","modifiedMeal"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,cADsB,0BACPC,GADO,EACFC,GADE,EACG;AACvB,QAAMC,SAAS,GAAGC,sBAAaJ,cAAb,EAAlB;;AACA,WAAOE,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEJ;AAFQ,KAAT,EAGJG,MAHI,CAGG,GAHH,CAAP;AAID,GAPqB;AAQtBE,EAAAA,WARsB,uBAQVP,GARU,EAQLC,GARK,EAQA;AACpB,QAAMO,QAAQ,GAAGR,GAAG,CAACS,IAArB;;AACA,QAAMC,YAAY,GAAGP,sBAAaI,WAAb,CAAyBC,QAAzB,CAArB;;AACA,WAAOP,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEI;AAFQ,KAAT,EAGJL,MAHI,CAGG,GAHH,CAAP;AAID,GAfqB;AAiBtBM,EAAAA,WAjBsB,uBAiBVX,GAjBU,EAiBLC,GAjBK,EAiBA;AACpB,QAAMU,WAAW,GAAGX,GAAG,CAACS,IAAxB;AADoB,QAEZG,EAFY,GAELZ,GAAG,CAACa,MAFC,CAEZD,EAFY;;AAIpB,QAAI,CAACE,MAAM,CAACF,EAAD,CAAX,EAAiB;AACf,aAAOX,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BU,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AACD,QAAMC,YAAY,GAAGb,sBAAaQ,WAAb,CAAyBC,EAAzB,EAA6BD,WAA7B,CAArB;;AACA,WAAOV,GAAG,CAACG,IAAJ,CAAS;AACdC,MAAAA,MAAM,EAAE,SADM;AAEdC,MAAAA,IAAI,EAAEU;AAFQ,KAAT,EAGJX,MAHI,CAGG,GAHH,CAAP;AAID;AAhCqB,CAAxB;eAmCeP,e","sourcesContent":["import OrderService from '../services/OrderService';\n\nconst OrderController = {\n  fetchAllOrders(req, res) {\n    const allOrders = OrderService.fetchAllOrders();\n    return res.json({\n      status: 'success',\n      data: allOrders,\n    }).status(200);\n  },\n  selectOrder(req, res) {\n    const newOrder = req.body;\n    const createdOrder = OrderService.selectOrder(newOrder);\n    return res.json({\n      status: 'success',\n      data: createdOrder,\n    }).status(201);\n  },\n\n  modifyOrder(req, res) {\n    const modifyOrder = req.body;\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number',\n      });\n    }\n    const modifiedMeal = OrderService.modifyOrder(id, modifyOrder);\n    return res.json({\n      status: 'success',\n      data: modifiedMeal,\n    }).status(201);\n  },\n};\n\nexport default OrderController;\n"],"file":"ordersController.js"}